//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/BankService")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalancerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balancer {
            get {
                return this.BalancerField;
            }
            set {
                if ((this.BalancerField.Equals(value) != true)) {
                    this.BalancerField = value;
                    this.RaisePropertyChanged("Balancer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDto", Namespace="http://schemas.datacontract.org/2004/07/BankService.Dto")]
    [System.SerializableAttribute()]
    public partial class AccountDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalancerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balancer {
            get {
                return this.BalancerField;
            }
            set {
                if ((this.BalancerField.Equals(value) != true)) {
                    this.BalancerField = value;
                    this.RaisePropertyChanged("Balancer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionHistoryDto", Namespace="http://schemas.datacontract.org/2004/07/BankService.Dto")]
    [System.SerializableAttribute()]
    public partial class TransactionHistoryDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverAccountNumber {
            get {
                return this.ReceiverAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAccountNumberField, value) != true)) {
                    this.ReceiverAccountNumberField = value;
                    this.RaisePropertyChanged("ReceiverAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderAccountNumber {
            get {
                return this.SenderAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderAccountNumberField, value) != true)) {
                    this.SenderAccountNumberField = value;
                    this.RaisePropertyChanged("SenderAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveAccount", ReplyAction="http://tempuri.org/IService1/SaveAccountResponse")]
        BankClient.ServiceReference1.Account SaveAccount(BankClient.ServiceReference1.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveAccount", ReplyAction="http://tempuri.org/IService1/SaveAccountResponse")]
        System.Threading.Tasks.Task<BankClient.ServiceReference1.Account> SaveAccountAsync(BankClient.ServiceReference1.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        BankClient.ServiceReference1.AccountDto Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<BankClient.ServiceReference1.AccountDto> LoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Deposit", ReplyAction="http://tempuri.org/IService1/DepositResponse")]
        BankClient.ServiceReference1.TransactionHistoryDto Deposit(string userName, string password, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Deposit", ReplyAction="http://tempuri.org/IService1/DepositResponse")]
        System.Threading.Tasks.Task<BankClient.ServiceReference1.TransactionHistoryDto> DepositAsync(string userName, string password, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WithDraw", ReplyAction="http://tempuri.org/IService1/WithDrawResponse")]
        BankClient.ServiceReference1.TransactionHistoryDto WithDraw(string userName, string password, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WithDraw", ReplyAction="http://tempuri.org/IService1/WithDrawResponse")]
        System.Threading.Tasks.Task<BankClient.ServiceReference1.TransactionHistoryDto> WithDrawAsync(string userName, string password, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Transfer", ReplyAction="http://tempuri.org/IService1/TransferResponse")]
        BankClient.ServiceReference1.TransactionHistoryDto Transfer(string userName, string password, double amount, string receiverAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Transfer", ReplyAction="http://tempuri.org/IService1/TransferResponse")]
        System.Threading.Tasks.Task<BankClient.ServiceReference1.TransactionHistoryDto> TransferAsync(string userName, string password, double amount, string receiverAccountNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : BankClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<BankClient.ServiceReference1.IService1>, BankClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BankClient.ServiceReference1.Account SaveAccount(BankClient.ServiceReference1.Account account) {
            return base.Channel.SaveAccount(account);
        }
        
        public System.Threading.Tasks.Task<BankClient.ServiceReference1.Account> SaveAccountAsync(BankClient.ServiceReference1.Account account) {
            return base.Channel.SaveAccountAsync(account);
        }
        
        public BankClient.ServiceReference1.AccountDto Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public System.Threading.Tasks.Task<BankClient.ServiceReference1.AccountDto> LoginAsync(string userName, string password) {
            return base.Channel.LoginAsync(userName, password);
        }
        
        public BankClient.ServiceReference1.TransactionHistoryDto Deposit(string userName, string password, double amount) {
            return base.Channel.Deposit(userName, password, amount);
        }
        
        public System.Threading.Tasks.Task<BankClient.ServiceReference1.TransactionHistoryDto> DepositAsync(string userName, string password, double amount) {
            return base.Channel.DepositAsync(userName, password, amount);
        }
        
        public BankClient.ServiceReference1.TransactionHistoryDto WithDraw(string userName, string password, double amount) {
            return base.Channel.WithDraw(userName, password, amount);
        }
        
        public System.Threading.Tasks.Task<BankClient.ServiceReference1.TransactionHistoryDto> WithDrawAsync(string userName, string password, double amount) {
            return base.Channel.WithDrawAsync(userName, password, amount);
        }
        
        public BankClient.ServiceReference1.TransactionHistoryDto Transfer(string userName, string password, double amount, string receiverAccountNumber) {
            return base.Channel.Transfer(userName, password, amount, receiverAccountNumber);
        }
        
        public System.Threading.Tasks.Task<BankClient.ServiceReference1.TransactionHistoryDto> TransferAsync(string userName, string password, double amount, string receiverAccountNumber) {
            return base.Channel.TransferAsync(userName, password, amount, receiverAccountNumber);
        }
    }
}
